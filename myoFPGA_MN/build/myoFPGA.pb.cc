// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: myoFPGA.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "myoFPGA.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MyoFPGAProtobuf {

namespace {

const ::google::protobuf::Descriptor* motorConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  motorConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* motorStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  motorStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_myoFPGA_2eproto() {
  protobuf_AddDesc_myoFPGA_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "myoFPGA.proto");
  GOOGLE_CHECK(file != NULL);
  motorConfig_descriptor_ = file->message_type(0);
  static const int motorConfig_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, control_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, outputposmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, outputnegmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, spposmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, spnegmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, kp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, ki_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, kd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, forwardgain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, deadband_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, integralposmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, integralnegmax_),
  };
  motorConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      motorConfig_descriptor_,
      motorConfig::default_instance_,
      motorConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(motorConfig));
  motorStatus_descriptor_ = file->message_type(1);
  static const int motorStatus_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, pwmref_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, velocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, displacement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, current_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, sensor_),
  };
  motorStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      motorStatus_descriptor_,
      motorStatus::default_instance_,
      motorStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(motorStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(motorStatus));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_myoFPGA_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    motorConfig_descriptor_, &motorConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    motorStatus_descriptor_, &motorStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_myoFPGA_2eproto() {
  delete motorConfig::default_instance_;
  delete motorConfig_reflection_;
  delete motorStatus::default_instance_;
  delete motorStatus_reflection_;
}

void protobuf_AddDesc_myoFPGA_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmyoFPGA.proto\022\017MyoFPGAProtobuf\"\356\001\n\013mot"
    "orConfig\022\024\n\014control_mode\030\001 \003(\014\022\024\n\014output"
    "PosMax\030\002 \003(\005\022\024\n\014outputNegMax\030\003 \003(\005\022\020\n\010sp"
    "PosMax\030\004 \003(\005\022\020\n\010spNegMax\030\005 \003(\005\022\n\n\002Kp\030\006 \003"
    "(\r\022\n\n\002Ki\030\007 \003(\r\022\n\n\002Kd\030\010 \003(\r\022\023\n\013forwardGai"
    "n\030\t \003(\r\022\020\n\010deadBand\030\n \003(\r\022\026\n\016IntegralPos"
    "Max\030\013 \003(\005\022\026\n\016IntegralNegMax\030\014 \003(\005\"x\n\013mot"
    "orStatus\022\016\n\006pwmRef\030\001 \003(\005\022\020\n\010position\030\002 \003"
    "(\005\022\020\n\010velocity\030\003 \003(\005\022\024\n\014displacement\030\004 \003"
    "(\005\022\017\n\007current\030\005 \003(\005\022\016\n\006sensor\030\006 \003(\005", 395);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "myoFPGA.proto", &protobuf_RegisterTypes);
  motorConfig::default_instance_ = new motorConfig();
  motorStatus::default_instance_ = new motorStatus();
  motorConfig::default_instance_->InitAsDefaultInstance();
  motorStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_myoFPGA_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_myoFPGA_2eproto {
  StaticDescriptorInitializer_myoFPGA_2eproto() {
    protobuf_AddDesc_myoFPGA_2eproto();
  }
} static_descriptor_initializer_myoFPGA_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int motorConfig::kControlModeFieldNumber;
const int motorConfig::kOutputPosMaxFieldNumber;
const int motorConfig::kOutputNegMaxFieldNumber;
const int motorConfig::kSpPosMaxFieldNumber;
const int motorConfig::kSpNegMaxFieldNumber;
const int motorConfig::kKpFieldNumber;
const int motorConfig::kKiFieldNumber;
const int motorConfig::kKdFieldNumber;
const int motorConfig::kForwardGainFieldNumber;
const int motorConfig::kDeadBandFieldNumber;
const int motorConfig::kIntegralPosMaxFieldNumber;
const int motorConfig::kIntegralNegMaxFieldNumber;
#endif  // !_MSC_VER

motorConfig::motorConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MyoFPGAProtobuf.motorConfig)
}

void motorConfig::InitAsDefaultInstance() {
}

motorConfig::motorConfig(const motorConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MyoFPGAProtobuf.motorConfig)
}

void motorConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

motorConfig::~motorConfig() {
  // @@protoc_insertion_point(destructor:MyoFPGAProtobuf.motorConfig)
  SharedDtor();
}

void motorConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void motorConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* motorConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return motorConfig_descriptor_;
}

const motorConfig& motorConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_myoFPGA_2eproto();
  return *default_instance_;
}

motorConfig* motorConfig::default_instance_ = NULL;

motorConfig* motorConfig::New() const {
  return new motorConfig;
}

void motorConfig::Clear() {
  control_mode_.Clear();
  outputposmax_.Clear();
  outputnegmax_.Clear();
  spposmax_.Clear();
  spnegmax_.Clear();
  kp_.Clear();
  ki_.Clear();
  kd_.Clear();
  forwardgain_.Clear();
  deadband_.Clear();
  integralposmax_.Clear();
  integralnegmax_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool motorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MyoFPGAProtobuf.motorConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes control_mode = 1;
      case 1: {
        if (tag == 10) {
         parse_control_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_control_mode()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_control_mode;
        if (input->ExpectTag(16)) goto parse_outputPosMax;
        break;
      }

      // repeated int32 outputPosMax = 2;
      case 2: {
        if (tag == 16) {
         parse_outputPosMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_outputposmax())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_outputposmax())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_outputPosMax;
        if (input->ExpectTag(24)) goto parse_outputNegMax;
        break;
      }

      // repeated int32 outputNegMax = 3;
      case 3: {
        if (tag == 24) {
         parse_outputNegMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_outputnegmax())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_outputnegmax())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_outputNegMax;
        if (input->ExpectTag(32)) goto parse_spPosMax;
        break;
      }

      // repeated int32 spPosMax = 4;
      case 4: {
        if (tag == 32) {
         parse_spPosMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_spposmax())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_spposmax())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_spPosMax;
        if (input->ExpectTag(40)) goto parse_spNegMax;
        break;
      }

      // repeated int32 spNegMax = 5;
      case 5: {
        if (tag == 40) {
         parse_spNegMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_spnegmax())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_spnegmax())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_spNegMax;
        if (input->ExpectTag(48)) goto parse_Kp;
        break;
      }

      // repeated uint32 Kp = 6;
      case 6: {
        if (tag == 48) {
         parse_Kp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_kp())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_kp())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Kp;
        if (input->ExpectTag(56)) goto parse_Ki;
        break;
      }

      // repeated uint32 Ki = 7;
      case 7: {
        if (tag == 56) {
         parse_Ki:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_ki())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ki())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Ki;
        if (input->ExpectTag(64)) goto parse_Kd;
        break;
      }

      // repeated uint32 Kd = 8;
      case 8: {
        if (tag == 64) {
         parse_Kd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_kd())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_kd())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Kd;
        if (input->ExpectTag(72)) goto parse_forwardGain;
        break;
      }

      // repeated uint32 forwardGain = 9;
      case 9: {
        if (tag == 72) {
         parse_forwardGain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_forwardgain())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_forwardgain())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_forwardGain;
        if (input->ExpectTag(80)) goto parse_deadBand;
        break;
      }

      // repeated uint32 deadBand = 10;
      case 10: {
        if (tag == 80) {
         parse_deadBand:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_deadband())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deadband())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_deadBand;
        if (input->ExpectTag(88)) goto parse_IntegralPosMax;
        break;
      }

      // repeated int32 IntegralPosMax = 11;
      case 11: {
        if (tag == 88) {
         parse_IntegralPosMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88, input, this->mutable_integralposmax())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_integralposmax())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_IntegralPosMax;
        if (input->ExpectTag(96)) goto parse_IntegralNegMax;
        break;
      }

      // repeated int32 IntegralNegMax = 12;
      case 12: {
        if (tag == 96) {
         parse_IntegralNegMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_integralnegmax())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_integralnegmax())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_IntegralNegMax;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MyoFPGAProtobuf.motorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MyoFPGAProtobuf.motorConfig)
  return false;
#undef DO_
}

void motorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MyoFPGAProtobuf.motorConfig)
  // repeated bytes control_mode = 1;
  for (int i = 0; i < this->control_mode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->control_mode(i), output);
  }

  // repeated int32 outputPosMax = 2;
  for (int i = 0; i < this->outputposmax_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->outputposmax(i), output);
  }

  // repeated int32 outputNegMax = 3;
  for (int i = 0; i < this->outputnegmax_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->outputnegmax(i), output);
  }

  // repeated int32 spPosMax = 4;
  for (int i = 0; i < this->spposmax_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->spposmax(i), output);
  }

  // repeated int32 spNegMax = 5;
  for (int i = 0; i < this->spnegmax_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->spnegmax(i), output);
  }

  // repeated uint32 Kp = 6;
  for (int i = 0; i < this->kp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->kp(i), output);
  }

  // repeated uint32 Ki = 7;
  for (int i = 0; i < this->ki_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->ki(i), output);
  }

  // repeated uint32 Kd = 8;
  for (int i = 0; i < this->kd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->kd(i), output);
  }

  // repeated uint32 forwardGain = 9;
  for (int i = 0; i < this->forwardgain_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->forwardgain(i), output);
  }

  // repeated uint32 deadBand = 10;
  for (int i = 0; i < this->deadband_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->deadband(i), output);
  }

  // repeated int32 IntegralPosMax = 11;
  for (int i = 0; i < this->integralposmax_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->integralposmax(i), output);
  }

  // repeated int32 IntegralNegMax = 12;
  for (int i = 0; i < this->integralnegmax_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->integralnegmax(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MyoFPGAProtobuf.motorConfig)
}

::google::protobuf::uint8* motorConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MyoFPGAProtobuf.motorConfig)
  // repeated bytes control_mode = 1;
  for (int i = 0; i < this->control_mode_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->control_mode(i), target);
  }

  // repeated int32 outputPosMax = 2;
  for (int i = 0; i < this->outputposmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->outputposmax(i), target);
  }

  // repeated int32 outputNegMax = 3;
  for (int i = 0; i < this->outputnegmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->outputnegmax(i), target);
  }

  // repeated int32 spPosMax = 4;
  for (int i = 0; i < this->spposmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->spposmax(i), target);
  }

  // repeated int32 spNegMax = 5;
  for (int i = 0; i < this->spnegmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->spnegmax(i), target);
  }

  // repeated uint32 Kp = 6;
  for (int i = 0; i < this->kp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->kp(i), target);
  }

  // repeated uint32 Ki = 7;
  for (int i = 0; i < this->ki_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->ki(i), target);
  }

  // repeated uint32 Kd = 8;
  for (int i = 0; i < this->kd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->kd(i), target);
  }

  // repeated uint32 forwardGain = 9;
  for (int i = 0; i < this->forwardgain_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->forwardgain(i), target);
  }

  // repeated uint32 deadBand = 10;
  for (int i = 0; i < this->deadband_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->deadband(i), target);
  }

  // repeated int32 IntegralPosMax = 11;
  for (int i = 0; i < this->integralposmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(11, this->integralposmax(i), target);
  }

  // repeated int32 IntegralNegMax = 12;
  for (int i = 0; i < this->integralnegmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->integralnegmax(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MyoFPGAProtobuf.motorConfig)
  return target;
}

int motorConfig::ByteSize() const {
  int total_size = 0;

  // repeated bytes control_mode = 1;
  total_size += 1 * this->control_mode_size();
  for (int i = 0; i < this->control_mode_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->control_mode(i));
  }

  // repeated int32 outputPosMax = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->outputposmax_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->outputposmax(i));
    }
    total_size += 1 * this->outputposmax_size() + data_size;
  }

  // repeated int32 outputNegMax = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->outputnegmax_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->outputnegmax(i));
    }
    total_size += 1 * this->outputnegmax_size() + data_size;
  }

  // repeated int32 spPosMax = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->spposmax_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->spposmax(i));
    }
    total_size += 1 * this->spposmax_size() + data_size;
  }

  // repeated int32 spNegMax = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->spnegmax_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->spnegmax(i));
    }
    total_size += 1 * this->spnegmax_size() + data_size;
  }

  // repeated uint32 Kp = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->kp_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->kp(i));
    }
    total_size += 1 * this->kp_size() + data_size;
  }

  // repeated uint32 Ki = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->ki_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ki(i));
    }
    total_size += 1 * this->ki_size() + data_size;
  }

  // repeated uint32 Kd = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->kd_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->kd(i));
    }
    total_size += 1 * this->kd_size() + data_size;
  }

  // repeated uint32 forwardGain = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->forwardgain_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->forwardgain(i));
    }
    total_size += 1 * this->forwardgain_size() + data_size;
  }

  // repeated uint32 deadBand = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->deadband_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deadband(i));
    }
    total_size += 1 * this->deadband_size() + data_size;
  }

  // repeated int32 IntegralPosMax = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->integralposmax_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->integralposmax(i));
    }
    total_size += 1 * this->integralposmax_size() + data_size;
  }

  // repeated int32 IntegralNegMax = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->integralnegmax_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->integralnegmax(i));
    }
    total_size += 1 * this->integralnegmax_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void motorConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const motorConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const motorConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void motorConfig::MergeFrom(const motorConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  control_mode_.MergeFrom(from.control_mode_);
  outputposmax_.MergeFrom(from.outputposmax_);
  outputnegmax_.MergeFrom(from.outputnegmax_);
  spposmax_.MergeFrom(from.spposmax_);
  spnegmax_.MergeFrom(from.spnegmax_);
  kp_.MergeFrom(from.kp_);
  ki_.MergeFrom(from.ki_);
  kd_.MergeFrom(from.kd_);
  forwardgain_.MergeFrom(from.forwardgain_);
  deadband_.MergeFrom(from.deadband_);
  integralposmax_.MergeFrom(from.integralposmax_);
  integralnegmax_.MergeFrom(from.integralnegmax_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void motorConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void motorConfig::CopyFrom(const motorConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool motorConfig::IsInitialized() const {

  return true;
}

void motorConfig::Swap(motorConfig* other) {
  if (other != this) {
    control_mode_.Swap(&other->control_mode_);
    outputposmax_.Swap(&other->outputposmax_);
    outputnegmax_.Swap(&other->outputnegmax_);
    spposmax_.Swap(&other->spposmax_);
    spnegmax_.Swap(&other->spnegmax_);
    kp_.Swap(&other->kp_);
    ki_.Swap(&other->ki_);
    kd_.Swap(&other->kd_);
    forwardgain_.Swap(&other->forwardgain_);
    deadband_.Swap(&other->deadband_);
    integralposmax_.Swap(&other->integralposmax_);
    integralnegmax_.Swap(&other->integralnegmax_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata motorConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = motorConfig_descriptor_;
  metadata.reflection = motorConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int motorStatus::kPwmRefFieldNumber;
const int motorStatus::kPositionFieldNumber;
const int motorStatus::kVelocityFieldNumber;
const int motorStatus::kDisplacementFieldNumber;
const int motorStatus::kCurrentFieldNumber;
const int motorStatus::kSensorFieldNumber;
#endif  // !_MSC_VER

motorStatus::motorStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MyoFPGAProtobuf.motorStatus)
}

void motorStatus::InitAsDefaultInstance() {
}

motorStatus::motorStatus(const motorStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MyoFPGAProtobuf.motorStatus)
}

void motorStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

motorStatus::~motorStatus() {
  // @@protoc_insertion_point(destructor:MyoFPGAProtobuf.motorStatus)
  SharedDtor();
}

void motorStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void motorStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* motorStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return motorStatus_descriptor_;
}

const motorStatus& motorStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_myoFPGA_2eproto();
  return *default_instance_;
}

motorStatus* motorStatus::default_instance_ = NULL;

motorStatus* motorStatus::New() const {
  return new motorStatus;
}

void motorStatus::Clear() {
  pwmref_.Clear();
  position_.Clear();
  velocity_.Clear();
  displacement_.Clear();
  current_.Clear();
  sensor_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool motorStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MyoFPGAProtobuf.motorStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 pwmRef = 1;
      case 1: {
        if (tag == 8) {
         parse_pwmRef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_pwmref())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pwmref())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_pwmRef;
        if (input->ExpectTag(16)) goto parse_position;
        break;
      }

      // repeated int32 position = 2;
      case 2: {
        if (tag == 16) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_position())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_position())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_position;
        if (input->ExpectTag(24)) goto parse_velocity;
        break;
      }

      // repeated int32 velocity = 3;
      case 3: {
        if (tag == 24) {
         parse_velocity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_velocity())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_velocity())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_velocity;
        if (input->ExpectTag(32)) goto parse_displacement;
        break;
      }

      // repeated int32 displacement = 4;
      case 4: {
        if (tag == 32) {
         parse_displacement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_displacement())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_displacement())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_displacement;
        if (input->ExpectTag(40)) goto parse_current;
        break;
      }

      // repeated int32 current = 5;
      case 5: {
        if (tag == 40) {
         parse_current:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_current())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_current())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_current;
        if (input->ExpectTag(48)) goto parse_sensor;
        break;
      }

      // repeated int32 sensor = 6;
      case 6: {
        if (tag == 48) {
         parse_sensor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_sensor())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sensor())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sensor;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MyoFPGAProtobuf.motorStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MyoFPGAProtobuf.motorStatus)
  return false;
#undef DO_
}

void motorStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MyoFPGAProtobuf.motorStatus)
  // repeated int32 pwmRef = 1;
  for (int i = 0; i < this->pwmref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->pwmref(i), output);
  }

  // repeated int32 position = 2;
  for (int i = 0; i < this->position_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->position(i), output);
  }

  // repeated int32 velocity = 3;
  for (int i = 0; i < this->velocity_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->velocity(i), output);
  }

  // repeated int32 displacement = 4;
  for (int i = 0; i < this->displacement_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->displacement(i), output);
  }

  // repeated int32 current = 5;
  for (int i = 0; i < this->current_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->current(i), output);
  }

  // repeated int32 sensor = 6;
  for (int i = 0; i < this->sensor_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->sensor(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MyoFPGAProtobuf.motorStatus)
}

::google::protobuf::uint8* motorStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MyoFPGAProtobuf.motorStatus)
  // repeated int32 pwmRef = 1;
  for (int i = 0; i < this->pwmref_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->pwmref(i), target);
  }

  // repeated int32 position = 2;
  for (int i = 0; i < this->position_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->position(i), target);
  }

  // repeated int32 velocity = 3;
  for (int i = 0; i < this->velocity_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->velocity(i), target);
  }

  // repeated int32 displacement = 4;
  for (int i = 0; i < this->displacement_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->displacement(i), target);
  }

  // repeated int32 current = 5;
  for (int i = 0; i < this->current_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->current(i), target);
  }

  // repeated int32 sensor = 6;
  for (int i = 0; i < this->sensor_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->sensor(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MyoFPGAProtobuf.motorStatus)
  return target;
}

int motorStatus::ByteSize() const {
  int total_size = 0;

  // repeated int32 pwmRef = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->pwmref_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pwmref(i));
    }
    total_size += 1 * this->pwmref_size() + data_size;
  }

  // repeated int32 position = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->position_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->position(i));
    }
    total_size += 1 * this->position_size() + data_size;
  }

  // repeated int32 velocity = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->velocity_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->velocity(i));
    }
    total_size += 1 * this->velocity_size() + data_size;
  }

  // repeated int32 displacement = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->displacement_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->displacement(i));
    }
    total_size += 1 * this->displacement_size() + data_size;
  }

  // repeated int32 current = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->current_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->current(i));
    }
    total_size += 1 * this->current_size() + data_size;
  }

  // repeated int32 sensor = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->sensor_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->sensor(i));
    }
    total_size += 1 * this->sensor_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void motorStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const motorStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const motorStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void motorStatus::MergeFrom(const motorStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  pwmref_.MergeFrom(from.pwmref_);
  position_.MergeFrom(from.position_);
  velocity_.MergeFrom(from.velocity_);
  displacement_.MergeFrom(from.displacement_);
  current_.MergeFrom(from.current_);
  sensor_.MergeFrom(from.sensor_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void motorStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void motorStatus::CopyFrom(const motorStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool motorStatus::IsInitialized() const {

  return true;
}

void motorStatus::Swap(motorStatus* other) {
  if (other != this) {
    pwmref_.Swap(&other->pwmref_);
    position_.Swap(&other->position_);
    velocity_.Swap(&other->velocity_);
    displacement_.Swap(&other->displacement_);
    current_.Swap(&other->current_);
    sensor_.Swap(&other->sensor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata motorStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = motorStatus_descriptor_;
  metadata.reflection = motorStatus_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MyoFPGAProtobuf

// @@protoc_insertion_point(global_scope)
